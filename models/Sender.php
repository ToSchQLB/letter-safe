<?php

namespace app\models;

use Yii;
use yii\helpers\Html;
use yii\web\UploadedFile;

/**
 * This is the model class for table "sender".
 *
 * @property integer $id
 * @property string $name
 * @property string $name_2
 * @property string $adress1
 * @property string $adress2
 * @property string $zip
 * @property string $town
 * @property string $state
 * @property string $country
 * @property string $logo
 * @property string $css_class
 * @property string $short_name
 *
 * @property Document[] $documents
 * @property string fullAddress
 */
class Sender extends \yii\db\ActiveRecord
{
    const LOGO_PATH = '/img/sender/logo/';

    public $logoUpload;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'sender';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'name_2', 'adress1', 'adress2', 'town'], 'string', 'max' => 255],
            [['zip'], 'string', 'max' => 5],
            [['state', 'country'], 'string', 'max' => 100],
            [['css_class', 'short_name'], 'string', 'max' => 40],
            [['logo'], 'string'],
            [['logoUpload'], 'image', 'skipOnEmpty' => true],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'adress1' => Yii::t('app', 'Adress1'),
            'adress2' => Yii::t('app', 'Adress2'),
            'zip' => Yii::t('app', 'Zip'),
            'town' => Yii::t('app', 'Town'),
            'state' => Yii::t('app', 'State'),
            'country' => Yii::t('app', 'Country'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocuments()
    {
        return $this->hasMany(Document::className(), ['sender_id' => 'id']);
    }

    /**
     * @return string
     */
    public function getFullAddress()
    {
        $address = $this->name . '<br>' . $this->adress1 . '<br>' . $this->zip . ' ' . $this->town;

        return $address;
    }

    public function beforeSave($insert)
    {
        if (!empty($this->logoUpload)) {
            $filename = uniqid() . '.' . $this->logoUpload->extension;
            $basePath = Yii::$app->basePath;
            $folder_absolute = $basePath . '/web' . self::LOGO_PATH;
            if (isset(Yii::$app->params['logoPath'])) {
                $folder_absolute = Yii::$app->params['logoPath'];
            }
            $this->logoUpload->saveAs($folder_absolute . $filename, true);
            $this->logo = $filename;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        $this->logoUpload = UploadedFile::getInstance($this, 'logoUpload');
        return true;
    }

    public function getSelect2Anzeige()
    {
        return static::renderSelect2Anzeige($this->attributes);
    }

    public static function renderSelect2Anzeige($attributes)
    {
        return Html::tag(
            'div',
            implode(
                '',
                [
                    Html::tag(
                        'div',
                        empty($attributes['logo']) ?:
                            Html::img(
                                'img/sender/logo/' . $attributes['logo'],
                                [
                                    'class' => 'img-responsive',
                                    'style' => 'max-height: 58px'
                                ]
                            ),
                        [
                            'class' => 'col-md-3'
                        ]
                    ),
                    Html::tag(
                        'div',
                        "<b>{$attributes['name']}</b><br>
            <small>
            {$attributes['adress1']}<br>
            {$attributes['zip']} {$attributes['town']}
            </small>",
                        ['class' => 'col-md-9']
                    )
                ]
            ),
            ['class' => 'row']
        );
    }
}
